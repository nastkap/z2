name: Docker CI with Docker Scout

on:
  workflow_dispatch:
  push:
    tags:
    - 'v*'

jobs:
  ci_step:
    name: Build, tag, and potentially push Docker image to GitHub Container Registry
    runs-on: ubuntu-latest
      
    steps:
      - name: Check out the source_repo
        uses: actions/checkout@v4
      
      - name: Docker metadata definitions
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKERHUB_USERNAME }}/example
          flavor: latest=false
          tags: |
            type=sha,priority=100,prefix=sha-,format=short
            type=semver,priority=200,pattern={{version}}   

      - name: QEMU set-up
        uses: docker/setup-qemu-action@v3

      - name: Buildx set-up
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and push Docker image
        id: docker-build-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: |
            type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/example:cache 
          cache-to: |
            type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/example:cache  
          tags: ${{ steps.meta.outputs.tags }}

      - name: Docker Scout - CVE Analysis
        id: docker-scout-cves
        uses: docker/scout-action@v1
        with:
          command: cves
          image: ${{ steps.meta.outputs.tags }}
          sarif-file: sarif.output.json
          summary: true

      - name: Determine CVE Severity
        id: determine-cve-severity
        run: echo "::set-output name=has_critical_or_high::$(grep -q 'critical\|high' sarif.output.json && echo true || echo false)"

      - name: Push Docker image if no critical or high CVEs
        if: steps.determine-cve-severity.outputs.has_critical_or_high == 'false'
        run: docker push nastkap/z2:${{ steps.meta.outputs.tags }}
